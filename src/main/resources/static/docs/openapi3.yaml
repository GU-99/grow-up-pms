openapi: 3.0.1
info:
  title: GU-99 API
  description: GU-99 API 명세 페이지입니다.
  version: 0.0.1
servers:
- url: http://localhost:8080
tags:
- name: Auth
  description: 인증
- name: Team
  description: 팀
- name: Status
  description: 상태
- name: Team Invitation
  description: 팀 초대
- name: Task
  description: 일정
- name: User
  description: 사용자
paths:
  /api/v1/team:
    post:
      tags:
      - Team
      summary: 팀 생성
      description: "사용자가 새로운 팀을 생성합니다. 생성 시, 다른 사용자를 함께 팀으로 초대할 수 있습니다."
      operationId: team-controller-v1-docs-test/팀_생성_api_문서를_생성한다
      parameters:
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-team-750252047'
            examples:
              team-controller-v1-docs-test/팀_생성_api_문서를_생성한다:
                value: |-
                  {
                    "teamName" : "커피러버스",
                    "content" : "코드 한 줄에 커피 한 잔, 우리는 카페인으로 움직이는 팀입니다!",
                    "coworkers" : [ {
                      "userId" : 2,
                      "roleName" : "Mate"
                    } ]
                  }
      responses:
        "201":
          description: "201"
          headers:
            Location:
              description: 생성된 팀의 URL
              schema:
                type: string
  /api/v1/user:
    post:
      tags:
      - User
      summary: 사용자 일반 회원가입
      description: 사용자의 계정을 서버에 등록합니다.
      operationId: user-controller-v1-docs-test/사용자_일반_회원가입_api_문서를_생성한다
      parameters:
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-user-257767709'
            examples:
              user-controller-v1-docs-test/사용자_일반_회원가입_api_문서를_생성한다:
                value: |-
                  {
                    "username" : "brown",
                    "password" : "test1234!@#$",
                    "email" : "brown@example.com",
                    "nickname" : "브라운",
                    "bio" : "안녕하세요, 브라운입니다!",
                    "profileImageName" : "728f3af8-4080-45b1-8b3c-d25e5e073dc7.png",
                    "links" : [ "http://example.com" ],
                    "verificationCode" : "123456"
                  }
      responses:
        "201":
          description: "201"
  /api/v1/team/{id}:
    get:
      tags:
      - Team
      summary: 팀 조회
      description: 해당 팀 정보를 조회합니다.
      operationId: team-controller-v1-docs-test/팀_조회_api_문서를_생성한다
      parameters:
      - name: id
        in: path
        description: 팀 아이디
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: "200"
          headers:
            Content-Type:
              description: application/json
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-team-id594896981'
              examples:
                team-controller-v1-docs-test/팀_조회_api_문서를_생성한다:
                  value: |-
                    {
                      "teamName" : "커피러버스",
                      "content" : "코드 한 줄에 커피 한 잔, 우리는 카페인으로 움직이는 팀입니다!",
                      "creatorId" : 1
                    }
    patch:
      tags:
      - Team
      summary: 팀 변경
      description: 해당 팀의 정보를 변경합니다.
      operationId: team-controller-v1-docs-test/팀_변경_api_문서를_생성한다
      parameters:
      - name: id
        in: path
        description: 팀 아이디
        required: true
        schema:
          type: integer
          format: int32
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-team-id-1624659386'
            examples:
              team-controller-v1-docs-test/팀_변경_api_문서를_생성한다:
                value: |-
                  {
                    "teamName" : "구구구",
                    "content" : "안녕하세요, 구구구입니다!"
                  }
      responses:
        "204":
          description: "204"
  /api/v1/user/login:
    post:
      tags:
      - Auth
      summary: 일반 로그인
      description: 아이디와 비밀번호를 통해 로그인합니다.
      operationId: login-controller-v1-docs-test/로그인_api_문서를_생성한다
      parameters:
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-user-login-434021498'
            examples:
              login-controller-v1-docs-test/로그인_api_문서를_생성한다:
                value: |-
                  {
                    "username" : "brown",
                    "password" : "test1234!@#$"
                  }
      responses:
        "200":
          description: "200"
          headers:
            Authorization:
              description: 액세스 토큰
              schema:
                type: string
            Set-Cookie:
              description: 리프레시 토큰
              schema:
                type: string
  /api/v1/user/logout:
    post:
      tags:
      - Auth
      summary: 로그아웃
      description: 사용자의 리프레시 토큰을 만료시킵니다. (요청 쿠키로 refreshToken 필요함)
      operationId: login-controller-v1-docs-test/로그아웃_api_문서를_생성한다
      responses:
        "200":
          description: "200"
  /api/v1/user/me:
    get:
      tags:
      - User
      summary: 현재 사용자 정보 조회
      description: 현재 로그인한 사용자의 정보를 조회합니다.
      operationId: user-controller-v1-docs-test/현재_사용자_정보_조회_api_문서를_생성한다
      responses:
        "200":
          description: "200"
          headers:
            Content-Type:
              description: application/json
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-me-752510290'
              examples:
                user-controller-v1-docs-test/현재_사용자_정보_조회_api_문서를_생성한다:
                  value: |-
                    {
                      "userId" : 1,
                      "username" : "brown",
                      "email" : "brown@growup.kr",
                      "provider" : "LOCAL",
                      "nickname" : "브라운",
                      "bio" : "안녕하세요, 브라운입니다!",
                      "profileImageName" : "728f3af8-4080-45b1-8b3c-d25e5e073dc7.png",
                      "links" : [ "https://github.com/growup" ]
                    }
  /api/v1/user/refresh:
    post:
      tags:
      - Auth
      summary: 토큰 재발급
      description: 쿠키를 통해 전달된 리프레시 토큰(refreshToken)을 통해 새로운 액세스 토큰을 발급합니다.
      operationId: login-controller-v1-docs-test/토큰_재발급_api_문서를_생성한다
      parameters:
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      responses:
        "200":
          description: "200"
          headers:
            Authorization:
              description: 새 액세스 토큰
              schema:
                type: string
  /api/v1/user/team:
    get:
      tags:
      - User
      summary: 가입한 팀 목록 조회
      description: 가입한 팀이거나 가입 대기 중인 팀의 목록을 조회합니다.
      operationId: user-controller-v1-docs-test/가입한_팀_목록_조회_api_문서를_생성한다
      responses:
        "200":
          description: "200"
          headers:
            Content-Type:
              description: application/json
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-team-928817730'
              examples:
                user-controller-v1-docs-test/가입한_팀_목록_조회_api_문서를_생성한다:
                  value: |-
                    [ {
                      "teamId" : 1,
                      "teamName" : "팀 이름",
                      "content" : "팀 소개",
                      "creator" : "팀장 닉네임",
                      "creatorId" : 1,
                      "isPendingApproval" : true,
                      "roleName" : "MATE"
                    } ]
  /api/v1/project/{projectId}/status:
    get:
      tags:
      - Status
      summary: 프로젝트 상태 목록 조회
      description: 프로젝트 내의 모든 상태를 조회합니다.
      operationId: status-controller-v1-docs-test/상태_목록조회_api_문서를_생성한다
      parameters:
      - name: projectId
        in: path
        description: 조회할 프로젝트 식별자
        required: true
        schema:
          type: number
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-project-projectId-status1220278061'
              examples:
                status-controller-v1-docs-test/상태_목록조회_api_문서를_생성한다:
                  value: |-
                    [ {
                      "statusId" : 1,
                      "projectId" : 1,
                      "name" : "대기중",
                      "colorCode" : "#FFFFFF",
                      "sortOrder" : 0
                    }, {
                      "statusId" : 2,
                      "projectId" : 1,
                      "name" : "진행중",
                      "colorCode" : "FFFFF0",
                      "sortOrder" : 1
                    } ]
    post:
      tags:
      - Status
      summary: 프로젝트 상태 생성
      description: "프로젝트의 식별자와 상태의 이름, 색상코드, 정렬 순서를 입력 받습니다."
      operationId: status-controller-v1-docs-test/상태등록_api_문서를_생성한다
      parameters:
      - name: projectId
        in: path
        description: 프로젝트 식별자
        required: true
        schema:
          type: number
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-project-projectId-status816001105'
            examples:
              status-controller-v1-docs-test/상태등록_api_문서를_생성한다:
                value: |-
                  {
                    "name" : "대기중",
                    "colorCode" : "#FFFFFF",
                    "sortOrder" : 0
                  }
      responses:
        "201":
          description: "201"
          headers:
            Location:
              description: 생성된 상태의 URL
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-project-projectId-status1214003116'
              examples:
                status-controller-v1-docs-test/상태등록_api_문서를_생성한다:
                  value: |-
                    {
                      "statusId" : 1,
                      "projectId" : 1,
                      "name" : "대기중",
                      "colorCode" : "#FFFFFF",
                      "sortOrder" : 0
                    }
  /api/v1/project/{projectId}/task:
    get:
      tags:
      - Task
      summary: 상태별 프로젝트 일정 전체 조회
      description: 프로젝트와 상태의 식별자를 사용하여 프로젝트 내의 모든 일정을 상태별로 상태 식별자와 함께 상태별로 조회합니다.
      operationId: task-controller-v1-docs-test/일정_전체조회_api_문서를_생성한다
      parameters:
      - name: projectId
        in: path
        description: 조회할 프로젝트 식별자
        required: true
        schema:
          type: number
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/프로젝트 일정 전체 조회 성공 시 응답 예시입니다.'
              examples:
                task-controller-v1-docs-test/일정_전체조회_api_문서를_생성한다:
                  value: |-
                    {
                      "2" : [ {
                        "taskId" : 2,
                        "statusId" : 2,
                        "taskName" : "프로젝트 일정 등록 기능 구현",
                        "sortOrder" : 1
                      } ],
                      "1" : [ {
                        "taskId" : 1,
                        "statusId" : 1,
                        "taskName" : "환경설정 마치기",
                        "sortOrder" : 1
                      } ]
                    }
    post:
      tags:
      - Task
      summary: 프로젝트 일정 생성
      description: "프로젝트의 상태 식별자와 일정 이름, 일정 내용, 정렬 순서, 시작일자, 종료일자를 입력 받습니다."
      operationId: task-controller-v1-docs-test/일정등록_api_문서를_생성한다
      parameters:
      - name: projectId
        in: path
        description: 프로젝트 식별자
        required: true
        schema:
          type: number
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/프로젝트 일정 생성 요청 예시입니다.'
            examples:
              task-controller-v1-docs-test/일정등록_api_문서를_생성한다:
                value: |-
                  {
                    "statusId" : 1,
                    "assigneeIds" : [ 1, 2, 3 ],
                    "taskName" : "환경설정 마치기",
                    "content" : "# GU-PMS 에 필요한 환경 설정은 다음과 같습니다. <br> ## 목차 <br> ### 1. JPA 의존성 주입",
                    "sortOrder" : 1,
                    "startDate" : "2023-01-01",
                    "endDate" : "2023-12-31"
                  }
      responses:
        "201":
          description: "201"
          headers:
            Location:
              description: 생성된 일정의 URL
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/프로젝트 일정 생성 성공 시 응답 예시입니다.'
              examples:
                task-controller-v1-docs-test/일정등록_api_문서를_생성한다:
                  value: |-
                    {
                      "taskId" : 1,
                      "statusId" : 1,
                      "taskName" : "환경설정 마치기",
                      "content" : "# GU-PMS 에 필요한 환경 설정은 다음과 같습니다. <br> ## 목차 <br> ### 1. JPA 의존성 주입",
                      "sortOrder" : 1,
                      "startDate" : "2023-01-01",
                      "endDate" : "2023-12-31"
                    }
  /api/v1/team/{id}/leave:
    post:
      tags:
      - Team
      summary: 팀 탈퇴
      description: 해당 팀을 탈퇴합니다. 자신이 팀장이라면 팀을 제거합니다.
      operationId: team-controller-v1-docs-test/팀_탈퇴_api_문서를_생성한다
      parameters:
      - name: id
        in: path
        description: 탈퇴할 팀 ID
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: "204"
  /api/v1/team/{teamId}/invitation:
    post:
      tags:
      - Team Invitation
      summary: 팀 초대
      description: 해당 사용자를 특정 팀에 초대합니다.
      operationId: team-invitation-controller-v1-docs-test/팀_초대_api_문서를_생성한다
      parameters:
      - name: teamId
        in: path
        description: 초대할 팀 ID
        required: true
        schema:
          type: number
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      - name: Authorization
        in: header
        description: Bearer 액세스 토큰
        required: true
        schema:
          type: string
        example: Bearer 액세스 토큰
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-team-teamId-invitation-1262545139'
            examples:
              team-invitation-controller-v1-docs-test/팀_초대_api_문서를_생성한다:
                value: |-
                  {
                    "userId" : 1,
                    "roleName" : "LEADER"
                  }
      responses:
        "200":
          description: "200"
  /api/v1/team/{teamId}/project:
    get:
      tags:
      - Project
      summary: 프로젝트 목록조회
      description: 팀 내에 존재하는 모든 프로젝트의 목록을 조회합니다.
      operationId: project-controller-v1-docs-test/프로젝트_목록조회_api_문서를_생성한다
      parameters:
      - name: teamId
        in: path
        description: 팀 ID
        required: true
        schema:
          type: number
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-team-teamId-project-557506802'
              examples:
                project-controller-v1-docs-test/프로젝트_목록조회_api_문서를_생성한다:
                  value: |-
                    [ {
                      "projectId" : 1,
                      "projectName" : "PMS 프로젝트",
                      "content" : "프로젝트 관리 서비스를 개발하는 프로젝트",
                      "startDate" : "2024-01-01",
                      "endDate" : "2024-12-31",
                      "createdAt" : "2024-08-31 22:30:00",
                      "updatedAt" : "2024-08-31 22:30:00"
                    }, {
                      "projectId" : 2,
                      "projectName" : "PMS 프로젝트",
                      "content" : "프로젝트 관리 서비스를 개발하는 프로젝트",
                      "startDate" : "2024-01-01",
                      "endDate" : "2024-12-31",
                      "createdAt" : "2024-08-31 22:30:00",
                      "updatedAt" : "2024-08-31 22:30:00"
                    }, {
                      "projectId" : 3,
                      "projectName" : "PMS 프로젝트",
                      "content" : "프로젝트 관리 서비스를 개발하는 프로젝트",
                      "startDate" : "2024-01-01",
                      "endDate" : "2024-12-31",
                      "createdAt" : "2024-08-31 22:30:00",
                      "updatedAt" : "2024-08-31 22:30:00"
                    } ]
    post:
      tags:
      - Project
      summary: 프로젝트 생성
      description: "프로젝트의 이름, 설명, 시작일자, 종료일자를 입력 받습니다."
      operationId: project-controller-v1-docs-test/프로젝트_생성_api_문서를_생성한다
      parameters:
      - name: teamId
        in: path
        description: 팀 ID
        required: true
        schema:
          type: number
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/프로젝트 생성 요청 예시입니다.'
            examples:
              project-controller-v1-docs-test/프로젝트_생성_api_문서를_생성한다:
                value: |-
                  {
                    "projectName" : "GU-PMS 프로젝트",
                    "content" : "프로젝트 관리 서비스 개발 프로젝트",
                    "startDate" : "2024-01-01",
                    "endDate" : "2024-12-31",
                    "coworkers" : [ {
                      "userId" : 1,
                      "roleName" : "ASSIGNEE"
                    } ]
                  }
      responses:
        "201":
          description: "201"
          headers:
            Location:
              description: 생성된 프로젝트 URL
              schema:
                type: string
  /api/v1/user/recover/password:
    post:
      tags:
      - User
      summary: 비밀번호 찾기
      description: 이메일 인증과 아이디를 통해서 사용자에게 임시 비밀번호를 발급한다.
      operationId: user-controller-v1-docs-test/비밀번호_찾기_api_문서를_생성한다
      parameters:
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-user-recover-password546453054'
            examples:
              user-controller-v1-docs-test/비밀번호_찾기_api_문서를_생성한다:
                value: |-
                  {
                    "email" : "brown@example.com",
                    "username" : "brown",
                    "verificationCode" : "123456"
                  }
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-recover-password1699166416'
              examples:
                user-controller-v1-docs-test/비밀번호_찾기_api_문서를_생성한다:
                  value: |-
                    {
                      "password" : "napl1m!A"
                    }
  /api/v1/user/recover/username:
    post:
      tags:
      - User
      summary: 아이디 찾기
      description: 이메일 인증을 통해 사용자의 아이디를 찾는다.
      operationId: user-controller-v1-docs-test/아이디_찾기_api_문서를_생성한다
      parameters:
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-user-recover-username-1963233032'
            examples:
              user-controller-v1-docs-test/아이디_찾기_api_문서를_생성한다:
                value: |-
                  {
                    "email" : "brown@example.com",
                    "verificationCode" : "123456"
                  }
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-recover-username1645263616'
              examples:
                user-controller-v1-docs-test/아이디_찾기_api_문서를_생성한다:
                  value: |-
                    {
                      "username" : "brown"
                    }
  /api/v1/user/verify/send:
    post:
      tags:
      - User
      summary: 인증코드 전송
      description: 사용자의 이메일에 인증코드를 전송합니다. 만료기간은 3분입니다.
      operationId: user-controller-v1-docs-test/인증코드_전송_api_문서를_생성한다
      parameters:
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-user-verify-send1365830936'
            examples:
              user-controller-v1-docs-test/인증코드_전송_api_문서를_생성한다:
                value: |-
                  {
                    "email" : "test@example.org"
                  }
      responses:
        "200":
          description: "200"
  /api/v1/project/{projectId}/status/{statusId}:
    delete:
      tags:
      - Status
      summary: 프로젝트 상태 삭제
      description: 프로젝트에 존재하는 상태를 삭제합니다.
      operationId: status-controller-v1-docs-test/상태_삭제_api_문서를_생성한다
      parameters:
      - name: projectId
        in: path
        description: 프로젝트 식별자
        required: true
        schema:
          type: string
      - name: statusId
        in: path
        description: 삭제할 상태 식별자
        required: true
        schema:
          type: string
      responses:
        "204":
          description: "204"
    patch:
      tags:
      - Status
      summary: 프로젝트 상태 변경
      description: "프로젝트 상태의 이름, 색상 코드, 정렬 순서를 변경합니다."
      operationId: status-controller-v1-docs-test/상태_변경_api_문서를_생성한다
      parameters:
      - name: projectId
        in: path
        description: 프로젝트 식별자
        required: true
        schema:
          type: string
      - name: statusId
        in: path
        description: 변경할 상태 식별자
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-project-projectId-status-statusId-1514376740'
            examples:
              status-controller-v1-docs-test/상태_변경_api_문서를_생성한다:
                value: |-
                  {
                    "statusName" : "대기중",
                    "colorCode" : "#FFFFFF",
                    "sortOrder" : 3
                  }
      responses:
        "204":
          description: "204"
  /api/v1/project/{projectId}/task/{taskId}:
    get:
      tags:
      - Task
      summary: 프로젝트 일정 상세 조회
      description: 프로젝트 내에서 선택한 일정을 조회합니다.
      operationId: task-controller-v1-docs-test/일정_상세조회_api_문서를_생성한다
      parameters:
      - name: projectId
        in: path
        description: 조회할 프로젝트 식별자
        required: true
        schema:
          type: number
      - name: taskId
        in: path
        description: 조회할 일정 식별자
        required: true
        schema:
          type: number
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/프로젝트 일정 상세 조회 성공 시 응답 예시입니다.'
              examples:
                task-controller-v1-docs-test/일정_상세조회_api_문서를_생성한다:
                  value: |-
                    {
                      "taskId" : 1,
                      "statusId" : 1,
                      "taskName" : "환경설정 마치기",
                      "content" : "# GU-PMS 에 필요한 환경 설정은 다음과 같습니다. <br> ## 목차 <br> ### 1. JPA 의존성 주입",
                      "sortOrder" : 1,
                      "startDate" : "2023-01-01",
                      "endDate" : "2023-12-31"
                    }
    delete:
      tags:
      - Task
      summary: 프로젝트 일정 삭제
      description: 프로젝트 식별자와 일정 식별자를 사용하여 프로젝트 일정을 삭제합니다.
      operationId: task-controller-v1-docs-test/일정_삭제_api_문서를_작성한다
      parameters:
      - name: projectId
        in: path
        description: 프로젝트 식별자
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        description: 변경할 일정 식별자
        required: true
        schema:
          type: string
      responses:
        "204":
          description: "204"
    patch:
      tags:
      - Task
      summary: 프로젝트 일정 내용 변경
      description: "프로젝트 일정의 상태 식별자, 일정 이름, 일정 본문내용, 정렬 순서, 시작일자, 종료일자를 변경합니다."
      operationId: task-controller-v1-docs-test/일정_변경_api_문서를_작성한다
      parameters:
      - name: projectId
        in: path
        description: 프로젝트 식별자
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        description: 변경할 일정 식별자
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/프로젝트 일정 변경 요청 예시입니다.'
            examples:
              task-controller-v1-docs-test/일정_변경_api_문서를_작성한다:
                value: |-
                  {
                    "statusId" : 1,
                    "taskName" : "환경설정 마치기",
                    "content" : "# GU-PMS 에 필요한 환경 설정은 다음과 같습니다. <br> ## 목차 <br> ### 1. JPA 의존성 주입",
                    "sortOrder" : 1,
                    "startDate" : "2023-01-01",
                    "endDate" : "2023-12-31"
                  }
      responses:
        "204":
          description: "204"
  /api/v1/team/{teamId}/invitation/accept:
    post:
      tags:
      - Team Invitation
      summary: 팀 초대 승낙
      description: 사용자가 팀 초대를 승낙합니다.
      operationId: team-invitation-controller-v1-docs-test/팀_초대_승낙_api_문서를_생성한다
      parameters:
      - name: teamId
        in: path
        description: 초대된 팀 ID
        required: true
        schema:
          type: number
      - name: Authorization
        in: header
        description: Bearer 액세스 토큰
        required: true
        schema:
          type: string
        example: Bearer 액세스 토큰
      responses:
        "200":
          description: "200"
  /api/v1/team/{teamId}/invitation/decline:
    post:
      tags:
      - Team Invitation
      summary: 팀 초대 거절
      description: 사용자가 팀 초대를 거절합니다.
      operationId: team-invitation-controller-v1-docs-test/팀_초대_거절_api_문서를_생성한다
      parameters:
      - name: teamId
        in: path
        description: 초대된 팀 ID
        required: true
        schema:
          type: number
      - name: Authorization
        in: header
        description: Bearer 액세스 토큰
        required: true
        schema:
          type: string
        example: Bearer 액세스 토큰
      responses:
        "200":
          description: "200"
  /api/v1/team/{teamId}/user/{targetMemberId}:
    delete:
      tags:
      - Team
      summary: 팀원 추방
      description: 해당 팀원을 추방합니다. 역할이 Mate인 팀원만 추방할 수 있습니다.
      operationId: team-user-controller-v1-test/팀_추방_api_문서를_생성한다
      parameters:
      - name: teamId
        in: path
        description: 팀 ID
        required: true
        schema:
          type: integer
          format: int32
      - name: targetMemberId
        in: path
        description: 추방할 팀원 ID
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: "204"
  /api/v1/team/{teamId}/user/{targetMemberId}/role:
    put:
      tags:
      - Team
      summary: 팀원 역할 변경
      description: 팀장이 자신의 팀원의 역할을 변경합니다. 자신의 역할은 변경할 수 없습니다.
      operationId: team-user-controller-v1-test/팀원_역할_변경_api_문서를_생성한다
      parameters:
      - name: teamId
        in: path
        description: 팀 ID
        required: true
        schema:
          type: integer
          format: int32
      - name: targetMemberId
        in: path
        description: 역할을 변경할 팀원 ID
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-team-teamId-user-targetMemberId-role-1605929895'
            examples:
              team-user-controller-v1-test/팀원_역할_변경_api_문서를_생성한다:
                value: |-
                  {
                    "roleName" : "MATE"
                  }
      responses:
        "200":
          description: "200"
components:
  schemas:
    api-v1-user-257767709:
      type: object
      properties:
        password:
          type: string
          description: 비밀번호
        profileImageName:
          type: string
          description: 프로필 이미지 이름
        nickname:
          type: string
          description: 닉네임
        bio:
          type: string
          description: 자기소개
        links:
          type: array
          description: 사용자 링크
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        email:
          type: string
          description: 이메일
        verificationCode:
          type: string
          description: 인증코드
        username:
          type: string
          description: 사용자 아이디
    api-v1-user-recover-username-1963233032:
      type: object
      properties:
        email:
          type: string
          description: 가입 시 입력한 이메일
        verificationCode:
          type: string
          description: 이메일로 전송된 인증번호
    api-v1-team-teamId-project-557506802:
      type: array
      description: 팀 ID에 해당하는 프로젝트 목록
      items:
        type: object
        properties:
          createdAt:
            type: string
            description: 프로젝트 생성일시
          endDate:
            type: string
            description: 프로젝트 종료 일자
          projectName:
            type: string
            description: 프로젝트 이름
          projectId:
            type: number
            description: 프로젝트 ID
          startDate:
            type: string
            description: 프로젝트 시작 일자
          content:
            type: string
            description: 프로젝트 설명
          updatedAt:
            type: string
            description: 프로젝트 변경일시
        description: 팀 ID에 해당하는 프로젝트 목록
    api-v1-user-me-752510290:
      type: object
      properties:
        profileImageName:
          type: string
          description: 프로필 이미지 이름
        provider:
          type: string
          description: 인증 프로바이더
        nickname:
          type: string
          description: 닉네임
        bio:
          type: string
          description: 자기소개
        links:
          type: array
          description: 링크 목록
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        userId:
          type: number
          description: 식별자
        email:
          type: string
          description: 이메일
        username:
          type: string
          description: 아이디
    프로젝트 일정 상세 조회 성공 시 응답 예시입니다.:
      title: 프로젝트 일정 상세 조회 성공 시 응답 예시입니다.
      type: object
      properties:
        statusId:
          type: number
          description: 프로젝트 상태 식별자
        endDate:
          type: string
          description: 종료일자
        sortOrder:
          type: number
          description: 정렬 순서
        taskName:
          type: string
          description: 일정 이름
        startDate:
          type: string
          description: 시작일자
        content:
          type: string
          description: 일정 내용
        taskId:
          type: number
          description: 프로젝트 일정 식별자
    프로젝트 일정 변경 요청 예시입니다.:
      title: 프로젝트 일정 변경 요청 예시입니다.
      type: object
      properties:
        statusId:
          type: number
          description: 프로젝트 상태 식별자
        endDate:
          type: string
          description: 종료일자
        sortOrder:
          type: number
          description: 정렬 순서
        taskName:
          type: string
          description: 일정 이름
        startDate:
          type: string
          description: 시작일자
        content:
          type: string
          description: 일정 내용
    api-v1-user-recover-username1645263616:
      type: object
      properties:
        username:
          type: string
          description: 복구된 사용자의 아이디
    api-v1-project-projectId-status1220278061:
      type: array
      items:
        type: object
        properties:
          statusId:
            type: number
            description: 상태 식별자
          sortOrder:
            type: number
            description: 정렬 순서
          name:
            type: string
            description: 상태 이름
          colorCode:
            type: string
            description: 색상 코드
          projectId:
            type: number
            description: 프로젝트 식별자
    api-v1-user-recover-password1699166416:
      type: object
      properties:
        password:
          type: string
          description: 임시로 발급된 비밀번호
    프로젝트 생성 요청 예시입니다.:
      title: 프로젝트 생성 요청 예시입니다.
      type: object
      properties:
        endDate:
          type: string
          description: 프로젝트 종료 일자
        coworkers:
          type: array
          description: 프로젝트에 초대할 팀원 목록
          items:
            type: object
            properties:
              roleName:
                type: string
                description: 초대할 팀원의 프로젝트 내에서의 권한
              userId:
                type: number
                description: 초대할 팀원의 회원 ID
        projectName:
          type: string
          description: 프로젝트 이름
        startDate:
          type: string
          description: 프로젝트 시작 일자
        content:
          type: string
          description: 프로젝트 설명
    api-v1-user-team-928817730:
      type: array
      items:
        type: object
        properties:
          teamName:
            type: string
            description: 팀 이름
          creator:
            type: string
            description: 팀장 닉네임
          teamId:
            type: number
            description: 팀 ID
          roleName:
            type: string
            description: 팀 내에서의 역할
          creatorId:
            type: number
            description: 팀장 ID
          isPendingApproval:
            type: boolean
            description: 가입 대기 여부
          content:
            type: string
            description: 팀 소개
    api-v1-team-teamId-user-targetMemberId-role-1605929895:
      type: object
      properties:
        roleName:
          type: string
          description: 부여할 역할명
    프로젝트 일정 전체 조회 성공 시 응답 예시입니다.:
      title: 프로젝트 일정 전체 조회 성공 시 응답 예시입니다.
      type: object
      properties:
        '*':
          type: array
          description: 상태별 프로젝트 일정 목록
          items:
            type: object
            properties:
              statusId:
                type: number
                description: 프로젝트 상태 식별자
              sortOrder:
                type: number
                description: 정렬 순서
              taskName:
                type: string
                description: 일정 이름
              taskId:
                type: number
                description: 프로젝트 일정 식별자
    api-v1-project-projectId-status-statusId-1514376740:
      type: object
      properties:
        sortOrder:
          type: number
          description: 변경할 정렬 순서
        statusName:
          type: string
          description: 변경할 상태의 이름
        colorCode:
          type: string
          description: 변경할 색상 코드
    api-v1-team-id594896981:
      type: object
      properties:
        teamName:
          type: string
          description: 팀 이름
        creatorId:
          type: number
          description: 팀 생성자 ID
        content:
          type: string
          description: 팀 소개
    api-v1-user-login-434021498:
      type: object
      properties:
        password:
          type: string
          description: 비밀번호
        username:
          type: string
          description: 아이디
    api-v1-user-recover-password546453054:
      type: object
      properties:
        email:
          type: string
          description: 가입 시 입력한 이메일
        verificationCode:
          type: string
          description: 이메일로 전송된 인증번호
        username:
          type: string
          description: 가입 시 입력한 아이디
    프로젝트 일정 생성 요청 예시입니다.:
      title: 프로젝트 일정 생성 요청 예시입니다.
      type: object
      properties:
        statusId:
          type: number
          description: 프로젝트 상태 식별자
        endDate:
          type: string
          description: 종료일자
        sortOrder:
          type: number
          description: 정렬 순서
        taskName:
          type: string
          description: 일정 이름
        assigneeIds:
          type: array
          description: 담당할 팀원의 회원 식별자 목록
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        startDate:
          type: string
          description: 시작일자
        content:
          type: string
          description: 일정 내용
    api-v1-team-id-1624659386:
      type: object
      properties:
        teamName:
          type: string
          description: 팀 이름
        content:
          type: string
          description: 팀 소개
    api-v1-user-verify-send1365830936:
      type: object
      properties:
        email:
          type: string
          description: 인증하려는 사용자 이메일
    api-v1-project-projectId-status1214003116:
      type: object
      properties:
        statusId:
          type: number
          description: 생성퇸 상태 식별자
        sortOrder:
          type: number
          description: 정렬순서
        name:
          type: string
          description: 상태 이름
        colorCode:
          type: string
          description: 색상 코드
        projectId:
          type: number
          description: 프로젝트 식별자
    api-v1-team-teamId-invitation-1262545139:
      type: object
      properties:
        roleName:
          type: string
          description: 초대할 사용자의 역할명
        userId:
          type: number
          description: 초대할 사용자 ID
    api-v1-project-projectId-status816001105:
      type: object
      properties:
        sortOrder:
          type: number
          description: 정렬순서
        name:
          type: string
          description: 상태 이름
        colorCode:
          type: string
          description: 색상 코드
    api-v1-team-750252047:
      type: object
      properties:
        teamName:
          type: string
          description: 팀 이름
        coworkers:
          type: array
          description: 초대된 사용자 목록
          items:
            type: object
            properties:
              roleName:
                type: string
                description: 초대된 사용자의 역할
              userId:
                type: number
                description: 초대된 사용자 ID
        content:
          type: string
          description: 팀 소개
    프로젝트 일정 생성 성공 시 응답 예시입니다.:
      title: 프로젝트 일정 생성 성공 시 응답 예시입니다.
      type: object
      properties:
        statusId:
          type: number
          description: 프로젝트 상태 식별자
        endDate:
          type: string
          description: 종료일자
        sortOrder:
          type: number
          description: 정렬 순서
        taskName:
          type: string
          description: 일정 이름
        startDate:
          type: string
          description: 시작일자
        content:
          type: string
          description: 일정 내용
        taskId:
          type: number
          description: 프로젝트 일정 식별자
