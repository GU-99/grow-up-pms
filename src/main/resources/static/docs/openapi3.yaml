openapi: 3.0.1
info:
  title: GU-99 API
  description: GU-99 API 명세 페이지입니다.
  version: 0.0.1
servers:
- url: http://localhost:8080
tags:
- name: Auth
  description: 인증
- name: Team
  description: 팀
- name: Status
  description: 상태
- name: Team Invitation
  description: 팀 초대
paths:
  /api/v1/team:
    post:
      tags:
      - Team
      summary: 팀 생성
      description: 팀을 생성합니다.
      operationId: 사용자가_팀을_생성_시에/성공한다
      parameters:
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-team-id666486821'
            examples:
              사용자가_팀을_생성_시에/성공한다:
                value: |-
                  {
                    "name" : "구구구",
                    "content" : "안녕하세요, 구구구입니다!"
                  }
      responses:
        "201":
          description: "201"
          headers:
            Location:
              description: 생성된 팀의 URL
              schema:
                type: string
  /api/v1/team/{id}:
    get:
      tags:
      - Team
      summary: 팀 조회
      description: 팀 정보를 조회합니다.
      operationId: 사용자가_팀을_조회_시에/성공한다
      parameters:
      - name: id
        in: path
        description: 팀 아이디
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          headers:
            Content-Type:
              description: application/json
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-team-id666486821'
              examples:
                사용자가_팀을_조회_시에/성공한다:
                  value: |-
                    {
                      "name" : "구구구",
                      "content" : "안녕하세요, 구구구입니다!"
                    }
    delete:
      tags:
      - Team
      summary: 팀 제거
      description: 팀을 제거합니다.
      operationId: 사용자가_팀을_제거_시에/성공한다
      parameters:
      - name: id
        in: path
        description: 제거할 팀 ID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: "204"
    patch:
      tags:
      - Team
      summary: 팀 변경
      description: 팀의 정보를 변경합니다.
      operationId: 사용자가_팀을_변경_시에/성공한다
      parameters:
      - name: id
        in: path
        description: 팀 아이디
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-team-id666486821'
            examples:
              사용자가_팀을_변경_시에/성공한다:
                value: |-
                  {
                    "name" : "구구구",
                    "content" : "안녕하세요, 구구구입니다!"
                  }
      responses:
        "204":
          description: "204"
  /api/v1/user/login:
    post:
      tags:
      - Auth
      summary: 일반 로그인
      description: 아이디와 비밀번호를 통해 로그인합니다.
      operationId: 사용자가_로그인_시에/성공한다
      parameters:
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-user-login-74814376'
            examples:
              사용자가_로그인_시에/성공한다:
                value: |-
                  {
                    "email" : "brown@gu99.com",
                    "password" : "test1234!@#$"
                  }
      responses:
        "200":
          description: "200"
          headers:
            Authorization:
              description: 액세스 토큰
              schema:
                type: string
            Set-Cookie:
              description: 리프레시 토큰
              schema:
                type: string
  /api/v1/project/{projectId}/status:
    get:
      tags:
      - Status
      summary: 프로젝트 상태 목록 조회
      description: 프로젝트 내의 모든 상태를 조회합니다.
      operationId: status-controller-v1-docs-test/상태_목록조회_api_문서를_생성한다
      parameters:
      - name: projectId
        in: path
        description: 조회할 프로젝트 식별자
        required: true
        schema:
          type: number
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-project-projectId-status1840086195'
              examples:
                status-controller-v1-docs-test/상태_목록조회_api_문서를_생성한다:
                  value: |-
                    {
                      "hasNext" : false,
                      "items" : [ {
                        "statusId" : 1,
                        "projectId" : 1,
                        "name" : "대기중",
                        "colorCode" : "FFFFFF",
                        "sortOrder" : 0
                      }, {
                        "statusId" : 2,
                        "projectId" : 1,
                        "name" : "진행중",
                        "colorCode" : "FFFFF0",
                        "sortOrder" : 1
                      } ]
                    }
    post:
      tags:
      - Status
      summary: 프로젝트 상태 생성
      description: "프로젝트의 식별자와 상태의 이름, 색상코드, 정렬 순서를 입력 받습니다."
      operationId: status-controller-v1-docs-test/상태등록_api_문서를_생성한다
      parameters:
      - name: projectId
        in: path
        description: 프로젝트 식별자
        required: true
        schema:
          type: number
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-project-projectId-status816001105'
            examples:
              status-controller-v1-docs-test/상태등록_api_문서를_생성한다:
                value: |-
                  {
                    "name" : "대기중",
                    "colorCode" : "FFFFFF",
                    "sortOrder" : 0
                  }
      responses:
        "201":
          description: "201"
          headers:
            Location:
              description: 생성된 상태의 URL
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-project-projectId-status1214003116'
              examples:
                status-controller-v1-docs-test/상태등록_api_문서를_생성한다:
                  value: |-
                    {
                      "statusId" : 1,
                      "projectId" : 1,
                      "name" : "대기중",
                      "colorCode" : "FFFFFF",
                      "sortOrder" : 0
                    }
  /api/v1/project/{projectId}/task:
    get:
      tags:
      - Task
      summary: 프로젝트 일정 전체 조회
      description: 프로젝트 내의 모든 일정을 조회합니다.
      operationId: task-controller-v1-docs-test/일정_전체조회_api_문서를_생성한다
      parameters:
      - name: projectId
        in: path
        description: 조회할 프로젝트 식별자
        required: true
        schema:
          type: number
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-project-projectId-task1816323921'
              examples:
                task-controller-v1-docs-test/일정_전체조회_api_문서를_생성한다:
                  value: |-
                    {
                      "hasNext" : false,
                      "items" : [ {
                        "taskId" : 1,
                        "statusId" : 1,
                        "taskName" : "환경설정 마치기",
                        "userNickname" : "Hello나는팀원1",
                        "sortOrder" : 1
                      }, {
                        "taskId" : 2,
                        "statusId" : 1,
                        "taskName" : "프로젝트 일정 등록 기능 구현",
                        "userNickname" : "Hello2",
                        "sortOrder" : 1
                      } ]
                    }
    post:
      tags:
      - Task
      summary: 프로젝트 일정 생성
      description: "프로젝트의 상태 식별자와 일정 이름, 일정 내용, 정렬 순서, 시작일자, 종료일자를 입력 받습니다."
      operationId: task-controller-v1-docs-test/일정등록_api_문서를_생성한다
      parameters:
      - name: projectId
        in: path
        description: 프로젝트 식별자
        required: true
        schema:
          type: number
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-project-projectId-task581167037'
            examples:
              task-controller-v1-docs-test/일정등록_api_문서를_생성한다:
                value: |-
                  {
                    "statusId" : 1,
                    "taskName" : "환경설정 마치기",
                    "content" : "# GU-PMS 에 필요한 환경 설정은 다음과 같습니다. <br> ## 목차 <br> ### 1. JPA 의존성 주입",
                    "sortOrder" : 1,
                    "startDate" : "2023-01-01",
                    "endDate" : "2023-12-31"
                  }
      responses:
        "201":
          description: "201"
          headers:
            Location:
              description: 생성된 일정의 URL
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-project-projectId-task-106941217'
              examples:
                task-controller-v1-docs-test/일정등록_api_문서를_생성한다:
                  value: |-
                    {
                      "taskId" : 1,
                      "statusId" : 1,
                      "userNickname" : "Hello나는팀원1",
                      "taskName" : "환경설정 마치기",
                      "content" : "# GU-PMS 에 필요한 환경 설정은 다음과 같습니다. <br> ## 목차 <br> ### 1. JPA 의존성 주입",
                      "sortOrder" : 1,
                      "startDate" : "2023-01-01",
                      "endDate" : "2023-12-31"
                    }
  /api/v1/team/{teamId}/invitation:
    post:
      tags:
      - Team Invitation
      summary: 팀 초대
      description: 해당 사용자를 특정 팀에 초대합니다.
      operationId: team-invitation-controller-v1-docs-test/팀_초대_api_문서를_생성한다
      parameters:
      - name: teamId
        in: path
        description: 초대할 팀 ID
        required: true
        schema:
          type: number
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      - name: Authorization
        in: header
        description: Bearer 액세스 토큰
        required: true
        schema:
          type: string
        example: Bearer 액세스 토큰
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-team-teamId-invitation-1361275252'
            examples:
              team-invitation-controller-v1-docs-test/팀_초대_api_문서를_생성한다:
                value: |-
                  {
                    "userId" : 1
                  }
      responses:
        "201":
          description: "201"
  /api/v1/user/login/refresh:
    post:
      tags:
      - Auth
      summary: 토큰 재발급
      description: 쿠키를 통해 전달된 리프레시 토큰(refreshToken)을 통해 새로운 토큰을 발급합니다.
      operationId: 사용자가_토큰_재발급_시에/성공한다
      parameters:
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      responses:
        "200":
          description: "200"
          headers:
            Authorization:
              description: 새 액세스 토큰
              schema:
                type: string
            Set-Cookie:
              description: 새 리프레시 토큰
              schema:
                type: string
  /api/v1/project/{projectId}/status/{statusId}:
    delete:
      tags:
      - Status
      summary: 프로젝트 상태 삭제
      description: 프로젝트에 존재하는 상태를 삭제합니다.
      operationId: status-controller-v1-docs-test/상태_삭제_api_문서를_생성한다
      parameters:
      - name: projectId
        in: path
        description: 프로젝트 식별자
        required: true
        schema:
          type: string
      - name: statusId
        in: path
        description: 삭제할 상태 식별자
        required: true
        schema:
          type: string
      responses:
        "204":
          description: "204"
    patch:
      tags:
      - Status
      summary: 프로젝트 상태 변경
      description: "프로젝트 상태의 이름, 색상 코드, 정렬 순서를 변경합니다."
      operationId: status-controller-v1-docs-test/상태_변경_api_문서를_생성한다
      parameters:
      - name: projectId
        in: path
        description: 프로젝트 식별자
        required: true
        schema:
          type: string
      - name: statusId
        in: path
        description: 변경할 상태 식별자
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-project-projectId-status-statusId-1514376740'
            examples:
              status-controller-v1-docs-test/상태_변경_api_문서를_생성한다:
                value: |-
                  {
                    "statusName" : "대기중",
                    "colorCode" : "FFFFFF",
                    "sortOrder" : 3
                  }
      responses:
        "204":
          description: "204"
  /api/v1/team/{teamId}/invitation/accept:
    post:
      tags:
      - Team Invitation
      summary: 팀 초대 승낙
      description: 사용자가 팀 초대를 승낙합니다.
      operationId: team-invitation-controller-v1-docs-test/팀_초대_승낙_api_문서를_생성한다
      parameters:
      - name: teamId
        in: path
        description: 초대된 팀 ID
        required: true
        schema:
          type: number
      - name: Authorization
        in: header
        description: Bearer 액세스 토큰
        required: true
        schema:
          type: string
        example: Bearer 액세스 토큰
      responses:
        "204":
          description: "204"
  /api/v1/team/{teamId}/invitation/decline:
    post:
      tags:
      - Team Invitation
      summary: 팀 초대 거절
      description: 사용자가 팀 초대를 거절합니다.
      operationId: team-invitation-controller-v1-docs-test/팀_초대_거절_api_문서를_생성한다
      parameters:
      - name: teamId
        in: path
        description: 초대된 팀 ID
        required: true
        schema:
          type: number
      - name: Authorization
        in: header
        description: Bearer 액세스 토큰
        required: true
        schema:
          type: string
        example: Bearer 액세스 토큰
      responses:
        "204":
          description: "204"
components:
  schemas:
    api-v1-team-teamId-invitation-1361275252:
      type: object
      properties:
        userId:
          type: number
          description: 초대할 사용자 ID
    api-v1-project-projectId-status-statusId-1514376740:
      type: object
      properties:
        sortOrder:
          type: number
          description: 변경할 정렬 순서
        statusName:
          type: string
          description: 변경할 상태의 이름
        colorCode:
          type: string
          description: 변경할 색상 코드
    api-v1-project-projectId-status1214003116:
      type: object
      properties:
        statusId:
          type: number
          description: 생성퇸 상태 식별자
        sortOrder:
          type: number
          description: 정렬순서
        name:
          type: string
          description: 상태 이름
        colorCode:
          type: string
          description: 색상 코드
        projectId:
          type: number
          description: 프로젝트 식별자
    api-v1-user-login-74814376:
      type: object
      properties:
        password:
          type: string
          description: 비밀번호
        email:
          type: string
          description: 이메일
    api-v1-project-projectId-status816001105:
      type: object
      properties:
        sortOrder:
          type: number
          description: 정렬순서
        name:
          type: string
          description: 상태 이름
        colorCode:
          type: string
          description: 색상 코드
    api-v1-project-projectId-task1816323921:
      type: object
      properties:
        hasNext:
          type: boolean
          description: 다음 페이지 존재 여부
        items:
          type: array
          description: 프로젝트 내에 존재하는 일정 목록
          items:
            type: object
            properties:
              statusId:
                type: number
                description: 프로젝트 상태 식별자
              sortOrder:
                type: number
                description: 정렬 순서
              userNickname:
                type: string
                description: 회원 이름
              taskName:
                type: string
                description: 일정 이름
              taskId:
                type: number
                description: 프로젝트 일정 식별자
    api-v1-team-id666486821:
      type: object
      properties:
        name:
          type: string
          description: 팀 이름
        content:
          type: string
          description: 팀 소개
    api-v1-project-projectId-status1840086195:
      type: object
      properties:
        hasNext:
          type: boolean
          description: 다음 페이지 존재 여부
        items:
          type: array
          description: 프로젝트 내에 존재하는 상태 목록
          items:
            type: object
            properties:
              statusId:
                type: number
                description: 상태 식별자
              sortOrder:
                type: number
                description: 정렬 순서
              name:
                type: string
                description: 상태 이름
              colorCode:
                type: string
                description: 색상 코드
              projectId:
                type: number
                description: 프로젝트 식별자
    api-v1-project-projectId-task581167037:
      type: object
      properties:
        statusId:
          type: number
          description: 프로젝트 상태 식별자
        endDate:
          type: string
          description: 종료일자
        sortOrder:
          type: number
          description: 정렬 순서
        taskName:
          type: string
          description: 일정 이름
        startDate:
          type: string
          description: 시작일자
        content:
          type: string
          description: 일정 내용
    api-v1-project-projectId-task-106941217:
      type: object
      properties:
        statusId:
          type: number
          description: 프로젝트 상태 식별자
        endDate:
          type: string
          description: 종료일자
        sortOrder:
          type: number
          description: 정렬 순서
        userNickname:
          type: string
          description: 회원 이름
        taskName:
          type: string
          description: 일정 이름
        startDate:
          type: string
          description: 시작일자
        content:
          type: string
          description: 일정 내용
        taskId:
          type: number
          description: 프로젝트 일정 식별자
